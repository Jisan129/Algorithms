#include<bits/stdc++.h>

using namespace std;
struct Node
{
    int key;
    struct Node *left, *right;
};

struct Node *newNode(int item)
{
    struct Node *temp =  new Node;
    temp->key = item;
    temp->left = temp->right = NULL;
    return temp;
}

void inorder(struct Node *root)
{
    if (root != NULL)
    {
        inorder(root->left);
        printf("%d ", root->key);
        inorder(root->right);
    }
}

struct Node* insert(struct Node* node, int key)
{
    if (node == NULL) return newNode(key);

    if (key < node->key)
    {
        Node *lchild = insert(node->left, key);
        node->left  = lchild;
    }
    else if (key > node->key)
    {
        Node *rchild = insert(node->right, key);
        node->right  = rchild;
    }
    return node;
}

int main()
{
    struct Node *root = NULL;
    int n;
    scanf("%d",&n);
    if(n!=-1)
        root = insert(root, n);
    while(1){
        scanf("%d",&n);
        if(n==-1)
            break;
        insert(root,n);
    }
    queue<Node *> level;
    level.push(root);
    while (!level.empty()){
        Node *temp=level.front();
        cout << temp->key <<" ";
        level.pop();
        if(temp->left!=NULL)
            level.push(temp->left);
        if(temp->right!=NULL)
            level.push(temp->right);
    }
    return 0;
}