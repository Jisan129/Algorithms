
#include<bits/stdc++.h>
using namespace std;

struct Node
{
    int key;
    struct Node *left, *right, *parent;
};
struct Node *newNode(int item)
{
    struct Node *temp = new Node;
    temp->key = item;
    temp->left = temp->right = NULL;
    temp->parent = NULL;
    return temp;
}
void inorder(struct Node *root)
{
    if (root != NULL)
    {
        inorder(root->left);
        cout<<root->key<<" ";
        inorder(root->right);
        }
}
struct Node* insert(struct Node* node, int key)
{
    if (node == NULL) return newNode(key);
    if (key < node->key)
    {
        if((node->key)-key>3){
        Node *lchild = insert(node->left, key);
        node->left = lchild;
        lchild->parent = node;
        }
        else{
            cout<<"Reservaton Failed";
        }
    }
    else if (key > node->key)
    {
        if(key-(node->key)>3){
            Node *rchild = insert(node->right, key);
            node->right = rchild;

            // Set parent of root of right subtree
            rchild->parent = node;
        } else{
            cout<<"Reservaton Failed";
        }
    }
    cout<<endl;
    return node;
}
int main()
{
    struct Node *root = NULL;
    int a=0,step;
    while (step!=-1){
        cin>>step;
        if(a==0){
            root = insert(root, step);
            inorder(root);
            a++;
        } else if(step!=-1&&a>0){
            insert(root,step);
            inorder(root);

        }
    }
    cout<<endl;
    return 0;
}

